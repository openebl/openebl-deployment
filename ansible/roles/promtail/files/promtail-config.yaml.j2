server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://{{ loki_server }}/loki/api/v1/push

scrape_configs:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          app: varlogs
          __path__: /var/log/*log
    relabel_configs:
      - target_label: platform
        replacement: system
    pipeline_stages:
      - regex:
          expression: '(?i)(?P<level>debug|info|warn|error)'
          source: msg
      - labels:
          level:
      - replace:
          source_labels: [level]
          target_label: level
          replacement: info
          regex: ^$

  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - target_label: platform
        replacement: docker
      - source_labels: [__meta_docker_container_name]
        target_label: app
        regex: /(.+)
        replacement: $1
        action: replace
      - source_labels: [app]
        regex: promtail
        action: drop
      # - source_labels: [app]
      #   regex: grafana|prometheus|loki|tempo|alertmanager|otel-collector
      #   action: drop

    pipeline_stages:
      - docker: {}
      - regex:
          expression: '(?i)(?P<level>debug|info|warn|error)'
          source: msg
      - labels:
          level:
      - replace:
          source_labels: [level]
          target_label: level
          replacement: info
          regex: ^$
      # - match:
      #     selector: '{app="promtail"}'
      #     stages:
      #       - drop:
      #           expression: "drop if this string is in the log message"
